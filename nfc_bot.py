import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import sqlite3
from datetime import datetime
import time

# ‚ö†Ô∏è –í–ê–ñ–ù–û: –ó–ê–ú–ï–ù–ò–¢–ï –≠–¢–ò –î–ê–ù–ù–´–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ï!
BOT_TOKEN = "8343445533:AAG6dFqvdzDo_ymtmcWBv3xLHZOZ-kZzjvs"  # –ü–æ–ª—É—á–∏—Ç–µ —É @BotFather
ADMIN_IDS = [781193231, 722336160]  # –í–∞—à ID (—É–∑–Ω–∞–π—Ç–µ —É @userinfobot)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS user_requests (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            first_name TEXT,
            last_name TEXT,
            contact_type TEXT,
            new_value TEXT,
            timestamp TEXT
        )
    ''')
    conn.commit()
    conn.close()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

@bot.message_handler(commands=['start'])
def start_handler(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = KeyboardButton('üìù –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
    markup.add(item1)
    
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ NFC –≤–∏–∑–∏—Ç–∫–µ.\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∏–∑–º–µ–Ω–∏—Ç—å:\n"
        "‚Ä¢ Instagram username\n"
        "‚Ä¢ Telegram\n" 
        "‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "‚Ä¢ WhatsApp\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=markup
    )

@bot.message_handler(func=lambda message: message.text == 'üìù –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
def change_data_handler(message):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    msg = bot.send_message(
        message.chat.id,
        "üìù –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ò–ú–Ø –∏ –§–ê–ú–ò–õ–ò–Æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:\n"
        "–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
        reply_markup=ReplyKeyboardRemove()
    )
    bot.register_next_step_handler(msg, process_name_step)

def process_name_step(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏"""
    try:
        chat_id = message.chat.id
        text = message.text.strip()
        names = text.split()
        
        if len(names) < 2:
            msg = bot.send_message(chat_id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:\n–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤")
            bot.register_next_step_handler(msg, process_name_step)
            return
        
        user_data[chat_id] = {
            'first_name': names[0],
            'last_name': ' '.join(names[1:])
        }
        
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(KeyboardButton('Instagram'))
        markup.add(KeyboardButton('Telegram'))
        markup.add(KeyboardButton('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'))
        markup.add(KeyboardButton('WhatsApp'))
        
        msg = bot.send_message(
            chat_id, 
            "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup=markup
        )
        bot.register_next_step_handler(msg, process_contact_type_step)
        
    except Exception as e:
        bot.reply_to(message, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start')
        print(f"–û—à–∏–±–∫–∞ –≤ process_name_step: {e}")

def process_contact_type_step(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    try:
        chat_id = message.chat.id
        
        if message.text not in ['Instagram', 'Telegram', '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'WhatsApp']:
            msg = bot.send_message(chat_id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
            bot.register_next_step_handler(msg, process_contact_type_step)
            return
        
        user_data[chat_id]['contact_type'] = message.text
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        prompts = {
            'Instagram': "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π username Instagram (–±–µ–∑ @):",
            'Telegram': "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π username Telegram (–±–µ–∑ @):", 
            '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞': "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
            'WhatsApp': "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä WhatsApp:"
        }
        
        prompt = prompts.get(message.text, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:")
        
        msg = bot.send_message(chat_id, prompt, reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, process_new_value_step)
        
    except Exception as e:
        bot.reply_to(message, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start')
        print(f"–û—à–∏–±–∫–∞ –≤ process_contact_type_step: {e}")

def process_new_value_step(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è"""
    try:
        chat_id = message.chat.id
        user_data[chat_id]['new_value'] = message.text
        
        data = user_data[chat_id]
        first_name = data['first_name']
        last_name = data['last_name']
        contact_type = data['contact_type']
        new_value = data['new_value']
        
        confirmation_text = f"""
üìã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:

üë§ –ò–º—è: {first_name} {last_name}
üìù –ò–∑–º–µ–Ω—è–µ–º: {contact_type}
üÜï –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {new_value}

–í—Å—ë –≤–µ—Ä–Ω–æ?"""
        
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(KeyboardButton('‚úÖ –î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ'))
        markup.add(KeyboardButton('‚ùå –ù–µ—Ç, –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ'))
        
        msg = bot.send_message(chat_id, confirmation_text, reply_markup=markup)
        bot.register_next_step_handler(msg, process_confirmation_step)
        
    except Exception as e:
        bot.reply_to(message, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start')
        print(f"–û—à–∏–±–∫–∞ –≤ process_new_value_step: {e}")

def process_confirmation_step(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    try:
        chat_id = message.chat.id
        
        if message.text == '‚úÖ –î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ':
            data = user_data[chat_id]
            first_name = data['first_name']
            last_name = data['last_name']
            contact_type = data['contact_type']
            new_value = data['new_value']
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            cursor.execute('''
                INSERT INTO user_requests (user_id, first_name, last_name, contact_type, new_value, timestamp)
                VALUES (?, ?, ?, ?, ?, ?)
            ''', (chat_id, first_name, last_name, contact_type, new_value, timestamp))
            conn.commit()
            conn.close()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            admin_message = f"""
üö® –ù–û–í–´–ô –ó–ê–ü–†–û–° –ù–ê –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} {last_name}
üÜî User ID: {chat_id}
üì± –ö–æ–Ω—Ç–∞–∫—Ç: {contact_type}
üÜï –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {new_value}
‚è∞ –í—Ä–µ–º—è: {timestamp}

‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ Taplink!
            """
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            for admin_id in ADMIN_IDS:
                try:
                    bot.send_message(admin_id, admin_message)
                    print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
            
            # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(KeyboardButton('üìù –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'))
            
            user_message = f"""
‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç!

üë§ {first_name} {last_name}
üìù {contact_type}: {new_value}

üì® –ú—ã —É–≤–µ–¥–æ–º–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤. –ò–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –≤–Ω–µ—Å–µ–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.

–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.
            """
            
            bot.send_message(chat_id, user_message, reply_markup=markup)
            
            # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if chat_id in user_data:
                del user_data[chat_id]
            
        else:
            # –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ
            msg = bot.send_message(
                chat_id,
                "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ò–ú–Ø –∏ –§–ê–ú–ò–õ–ò–Æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:",
                reply_markup=ReplyKeyboardRemove()
            )
            bot.register_next_step_handler(msg, process_name_step)
            
    except Exception as e:
        bot.reply_to(message, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start')
        print(f"–û—à–∏–±–∫–∞ –≤ process_confirmation_step: {e}")

@bot.message_handler(commands=['help'])
def help_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:

üîπ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
üîπ /help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É

üìù –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å:
‚Ä¢ Instagram username
‚Ä¢ Telegram
‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞  
‚Ä¢ WhatsApp

‚è∞ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: –æ–±—ã—á–Ω–æ –¥–æ 24 —á–∞—Å–æ–≤

üìû –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    """
    bot.send_message(message.chat.id, help_text)

@bot.message_handler(commands=['admin'])
def admin_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    if message.chat.id not in ADMIN_IDS:
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM user_requests ORDER BY timestamp DESC LIMIT 10')
    requests = cursor.fetchall()
    conn.close()
    
    if not requests:
        bot.send_message(message.chat.id, "‚úÖ –ù–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        return
    
    response = "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤:\n\n"
    for req in requests:
        response += f"üÜî {req[0]}\nüë§ {req[2]} {req[3]}\nüì± {req[4]}: {req[5]}\n‚è∞ {req[6]}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
    
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.text not in ['üìù –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ']:
        bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")

if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    print("=" * 50)
    print("ü§ñ NFC –í–∏–∑–∏—Ç–∫–∞ –ë–æ—Ç")
    print("=" * 50)
    print("‚ö†Ô∏è  –ü–†–û–í–ï–†–¨–¢–ï –ß–¢–û –í–´ –ó–ê–ú–ï–ù–ò–õ–ò:")
    print(f"   BOT_TOKEN: {BOT_TOKEN}")
    print(f"   ADMIN_IDS: {ADMIN_IDS}")
    print("=" * 50)
    print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        bot.polling(none_stop=True, interval=1)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        time.sleep(5)